<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta http-equiv="Content-Style-Type" content="text/css">
  <title></title>
  <meta name="Generator" content="Cocoa HTML Writer">
  <meta name="CocoaVersion" content="1038.35">
  <style type="text/css">
    p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica}
  </style>
</head>
<body>
<p class="p1">var Playtomic={};Playtomic.Temp={};Playtomic.SWFID=0;Playtomic.GUID="";Playtomic.Enabled=true;Playtomic.SourceURL="";Playtomic.APIUrl="";Playtomic.Pings=0;Playtomic.FailCount=0;Playtomic.ScriptHolder=null;Playtomic.Beacon=new Image();Playtomic.Log={};Playtomic.Log.Request=new PlaytomicRequest();Playtomic.Log.Plays=0;Playtomic.Log.Pings=0;Playtomic.Log.FirstPing=true;Playtomic.Log.Customs=new Array();Playtomic.Log.LevelCounters=new Array();Playtomic.Log.LevelAverages=new Array();Playtomic.Log.LevelRangeds=new Array();Playtomic.Log.View=function(swfid,guid,defaulturl)</p>
<p class="p1">{if(Playtomic.SWFID&gt;0)</p>
<p class="p1">return;Playtomic.SWFID=swfid;Playtomic.GUID=guid;PLAYTOMIC_ENABLED=true;if((Playtomic.SWFID==0||Playtomic.GUID==""))</p>
<p class="p1">{Playtomic.Enabled=false;return;}</p>
<p class="p1">Playtomic.SourceURL=escape(defaulturl?defaulturl:document.location);if(Playtomic.SourceURL==null||Playtomic.SourceURL==""||Playtomic.SourceURL.indexOf("https://")==0)</p>
<p class="p1">{Playtomic.Enabled=false;return;}</p>
<p class="p1">Playtomic.APIUrl="http://g"+Playtomic.GUID+".api.playtomic.com/";Playtomic.ScriptHolder=document.createElement("div");Playtomic.ScriptHolder.style.position="absolute";document.getElementsByTagName("body")[0].appendChild(Playtomic.ScriptHolder);var views=Playtomic.GetCookie("views");views++;Playtomic.SetCookie("views",views);Playtomic.Log.Send("v/"+views,true);setTimeout(Playtomic.Log.Ping,60000);}</p>
<p class="p1">Playtomic.Log.Play=function()</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;Playtomic.Log.LevelCounters=new Array();Playtomic.Log.LevelAverages=new Array();Playtomic.Log.LevelRangeds=new Array();Playtomic.Log.Plays++;Playtomic.Log.Send("p/"+Playtomic.Plays);}</p>
<p class="p1">Playtomic.Log.Ping=function()</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;Playtomic.Log.Pings++;Playtomic.Log.Send("t/"+(Playtomic.FirstPing?"y":"n")+"/"+Playtomic.Pings,true);if(Playtomic.Log.FirstPing)</p>
<p class="p1">{setInterval(Playtomic.Log.Ping,30000);Playtomic.Log.FirstPing=false;}}</p>
<p class="p1">Playtomic.Log.Link=function(url,name,group,unique,total,fail)</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;Playtomic.Log.Send("l/"+Playtomic.Clean(name)+"/"+Playtomic.Clean(group)+"/"+Playtomic.Clean(url)+"/"+unique+"/"+total+"/"+fail);}</p>
<p class="p1">Playtomic.Log.CustomMetric=function(name,group,unique)</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;if(group==null||group==undefined)</p>
<p class="p1">group="";if(unique)</p>
<p class="p1">{if(Playtomic.Log.Customs.indexOf(name)&gt;-1)</p>
<p class="p1">return;Playtomic.Log.Customs.push(name);}</p>
<p class="p1">Playtomic.Log.Send("c/"+Playtomic.Clean(name)+"/"+Playtomic.Clean(group));}</p>
<p class="p1">Playtomic.Log.LevelCounterMetric=function(name,level,unique)</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;if(unique)</p>
<p class="p1">{if(Playtomic.Log.LevelCounters.indexOf(name)&gt;-1)</p>
<p class="p1">return;Playtomic.Log.LevelCounters.push(name);}</p>
<p class="p1">Playtomic.Log.Send("lc/"+Playtomic.Clean(name)+"/"+Playtomic.Clean(level));}</p>
<p class="p1">Playtomic.Log.LevelRangedMetric=function(name,level,valu,uniquee)</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;if(unique)</p>
<p class="p1">{if(Playtomic.Log.LevelRangeds.indexOf(name)&gt;-1)</p>
<p class="p1">return;Playtomic.Log.LevelRangeds.push(name);}</p>
<p class="p1">Playtomic.Log.Send("lr/"+Playtomic.Clean(name)+"/"+Playtomic.Clean(level)+"/"+value);}</p>
<p class="p1">Playtomic.Log.LevelAverageMetric=function(name,level,value,unique)</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;if(unique)</p>
<p class="p1">{if(Playtomic.Log.LevelAverages.indexOf(name)&gt;-1)</p>
<p class="p1">return;Playtomic.Log.LevelAverages.push(name);}</p>
<p class="p1">Playtomic.Log.Send("la/"+Playtomic.Clean(name)+"/"+Playtomic.Clean(level)+"/"+value);}</p>
<p class="p1">Playtomic.Log.Heatmap=function(name,group,x,y)</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;Playtomic.Log.Send("h/"+Playtomic.Clean(name)+"/"+Playtomic.Clean(group)+"/"+x+"/"+y);}</p>
<p class="p1">Playtomic.Log.Funnel=function(name,step,stepnum)</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;Playtomic.Log.Send("f/"+Playtomic.Clean(name)+"/"+Playtomic.Clean(step)+"/"+num);}</p>
<p class="p1">Playtomic.Log.PlayerLevelStart=function(levelid)</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;Playtomic.Log.Send("pls/"+levelid);}</p>
<p class="p1">Playtomic.Log.PlayerLevelWin=function(levelid)</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;Playtomic.Log.Send("plw/"+levelid);}</p>
<p class="p1">Playtomic.Log.PlayerLevelQuit=function(levelid)</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;Playtomic.Log.Send("plq/"+levelid);}</p>
<p class="p1">Playtomic.Log.PlayerLevelFlag=function(levelid)</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;Playtomic.Log.Send("plf/"+levelid);}</p>
<p class="p1">Playtomic.Log.Send=function(data,forcesend)</p>
<p class="p1">{Playtomic.Log.Request.Queue(data);if(Playtomic.Log.Request.Ready||forcesend)</p>
<p class="p1">{Playtomic.Log.Request.Send();Playtomic.Log.Request=new PlaytomicRequest();}}</p>
<p class="p1">Playtomic.Log.ForceSend=function()</p>
<p class="p1">{if(!Playtomic.Enabled)</p>
<p class="p1">return;Playtomic.Log.Request.Send();Playtomic.Log.Request=new PlaytomicRequest();}</p>
<p class="p1">function PlaytomicRequest()</p>
<p class="p1">{this.Data="";this.Pieces=0;this.Ready=false;this.Queue=function(data)</p>
<p class="p1">{if(Playtomic.FailCount&gt;3)</p>
<p class="p1">return;this.Pieces++;this.Data+=(this.Data==""?"":"~")+data;if(this.Pieces==8||this.Data.length&gt;300)</p>
<p class="p1">{this.Ready=true;}}</p>
<p class="p1">this.Send=function()</p>
<p class="p1">{var s=document.createElement("script");s.async=true;s.src=Playtomic.APIUrl+"tracker/q.aspx?swfid="+Playtomic.SWFID+"&amp;q="+this.Data+"&amp;url="+Playtomic.SourceURL+"&amp;"+Math.random()+"z";Playtomic.ScriptHolder.innerHTML="";Playtomic.ScriptHolder.appendChild(s);}}</p>
<p class="p1">Playtomic.Link={};Playtomic.Link.Clicks=new Array();Playtomic.Link.Track=function(url,name,group)</p>
<p class="p1">{var unique=0;var bunique=0;var total=0;var btotal=0;var fail=0;var bfail=0;var key=url+"."+name;var result;var baseurl=url;baseurl=baseurl.replace("http://","");if(baseurl.indexOf("/")&gt;-1)</p>
<p class="p1">baseurl=baseurl.substring(0,baseurl.indexOf("/"));if(baseurl.indexOf("?")&gt;-1)</p>
<p class="p1">baseurl=baseurl.substring(0,baseurl.indexOf("?"));baseurl="http://"+baseurl+"/";var baseurlname=baseurl;if(baseurlname.indexOf("//")&gt;-1)</p>
<p class="p1">baseurlname=baseurlname.substring(baseurlname.indexOf("//")+2);baseurlname=baseurlname.replace("www.","");if(baseurlname.indexOf("/")&gt;-1)</p>
<p class="p1">{baseurlname=baseurlname.substring(0,baseurlname.indexOf("/"));}</p>
<p class="p1">if(Playtomic.Link.Clicks.indexOf(key)&gt;-1)</p>
<p class="p1">{total=1;}</p>
<p class="p1">else</p>
<p class="p1">{total=1;unique=1;Playtomic.Link.Clicks.push(key);}</p>
<p class="p1">if(Playtomic.Link.Clicks.indexOf(baseurlname)&gt;-1)</p>
<p class="p1">{btotal=1;}</p>
<p class="p1">else</p>
<p class="p1">{btotal=1;bunique=1;Playtomic.Link.Clicks.push(baseurlname);}</p>
<p class="p1">Playtomic.Log.Link(baseurl,baseurlname.toLowerCase(),"DomainTotals",bunique,btotal,bfail);Playtomic.Log.Link(url,name,group,unique,total,fail);Playtomic.Log.ForceSend();}</p>
<p class="p1">Playtomic.Link.Open=function(url,name,group)</p>
<p class="p1">{var unique=0;var bunique=0;var total=0;var btotal=0;var fail=0;var bfail=0;var key=url+"."+name;var result;var baseurl=url;baseurl=baseurl.replace("http://","");if(baseurl.indexOf("/")&gt;-1)</p>
<p class="p1">baseurl=baseurl.substring(0,baseurl.indexOf("/"));if(baseurl.indexOf("?")&gt;-1)</p>
<p class="p1">baseurl=baseurl.substring(0,baseurl.indexOf("?"));baseurl="http://"+baseurl+"/";var baseurlname=baseurl;if(baseurlname.indexOf("//")&gt;-1)</p>
<p class="p1">baseurlname=baseurlname.substring(baseurlname.indexOf("//")+2);baseurlname=baseurlname.replace("www.","");if(baseurlname.indexOf("/")&gt;-1)</p>
<p class="p1">{baseurlname=baseurlname.substring(0,baseurlname.indexOf("/"));}</p>
<p class="p1">try</p>
<p class="p1">{var page=window.open(url,"_blank");if(Playtomic.Link.Clicks.indexOf(key)&gt;-1)</p>
<p class="p1">{total=1;}</p>
<p class="p1">else</p>
<p class="p1">{total=1;unique=1;Playtomic.Link.Clicks.push(key);}</p>
<p class="p1">if(Playtomic.Link.Clicks.indexOf(baseurlname)&gt;-1)</p>
<p class="p1">{btotal=1;}</p>
<p class="p1">else</p>
<p class="p1">{btotal=1;bunique=1;Playtomic.Link.Clicks.push(baseurlname);}</p>
<p class="p1">result=true;}</p>
<p class="p1">catch(err)</p>
<p class="p1">{fail=1;bfail=1;result=false;}</p>
<p class="p1">Playtomic.Log.Link(baseurl,baseurlname.toLowerCase(),"DomainTotals",bunique,btotal,bfail);Playtomic.Log.Link(url,name,group,unique,total,fail);Playtomic.Log.ForceSend();return result;}</p>
<p class="p1">Playtomic.PlayerLevels={};Playtomic.PlayerLevels.Save=function(level,callback)</p>
<p class="p1">{var postdata="nothumb=true"+"&amp;playerid="+level.PlayerId+"&amp;playersource="+encodeUri(level.PlayerSource)+"&amp;playername="+encodeUri(level.PlayerName)+"&amp;name="+encodeUri(level.Name);var c=0;for(var key in level.CustomData)</p>
<p class="p1">{postdata+="&amp;ckey"+c+"="+key;postdata+="&amp;cdata"+c+"="+encodeUri(level.CustomData[key]);c++;}</p>
<p class="p1">postdata+="&amp;customfields="+c;postdata+="&amp;data="+encodeUri(level.Data);var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;callback(response.Data.LevelId,{Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1,Data:{LevelId:""}};Playtomic.PostData(postdata,Playtomic.APIUrl+"playerlevels/save.aspx?swfid="+Playtomic.SWFID+"&amp;js=true",bridge,failvalue);}</p>
<p class="p1">Playtomic.PlayerLevels.Load=function(levelid,callback)</p>
<p class="p1">{var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;callback(response.Data,{Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1,Data:{LevelId:"",PlayerName:"",PlayerId:"",Name:"",Score:0,Votes:0,Plays:0,Rating:0,Data:"",Thumbnail:"",CustomData:{}}};Playtomic.PostData("",Playtomic.APIUrl+"playerlevels/load.aspx?swfid="+Playtomic.SWFID+"&amp;levelid="+levelid+"&amp;js=true",bridge,failvalue);}</p>
<p class="p1">Playtomic.PlayerLevels.List=function(callback,options)</p>
<p class="p1">{if(options==null)</p>
<p class="p1">options=new Object();var mode=options.mode?options.mode:"popular";var page=options.page?options.page:1;var perpage=options.perpage?options.perpage:20;var data=options.data||options.highest==false?(options.data?"y":"n"):"n";var datemin=options.datemin?options.datemin:"";var datemax=options.datemax?options.datemax:"";var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;callback(response.Data.Levels,response.Data.NumLevels,{Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1,Data:{NumLevels:0,Levels:[]}};Playtomic.PostData("",Playtomic.APIUrl+"playerlevels/list.aspx?swfid="+Playtomic.SWFID+"&amp;js=true&amp;mode="+mode+"&amp;page="+page+"&amp;perpage="+perpage+"&amp;data="+data+"&amp;datemin="+datemin+"&amp;datemax="+datemax,bridge,failvalue);}</p>
<p class="p1">Playtomic.PlayerLevels.Rate=function(levelid,rating,callback)</p>
<p class="p1">{var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;callback({Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1};Playtomic.PostData("",Playtomic.APIUrl+"playerlevels/rate.aspx?swfid="+Playtomic.SWFID+"&amp;levelid="+levelid+"&amp;rating="+rating+"&amp;js=true",bridge,failvalue);}</p>
<p class="p1">Playtomic.Leaderboards={};Playtomic.Leaderboards.List=function(table,callback,options)</p>
<p class="p1">{if(options==null)</p>
<p class="p1">options=new Object();var global=options.global||options.global==false?options.global:true;var highest=options.highest||options.highest==false?options.highest:true;var mode=options.mode?options.mode:"alltime";var customfilters=options.customfilters?options.customfilters:{};var page=options.page?options.page:1;var perpage=options.perpage?options.perpage:20;var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;Playtomic.Leaderboards.ListComplete(response,callback);}</p>
<p class="p1">var postdata="";var numcustomfilters=0;for(var x in customfilters)</p>
<p class="p1">{postdata+="&amp;ckey"+numcustomfilters+"="+x;postdata+="&amp;cdata"+numcustomfilters+"="+customfilters[x];numcustomfilters++;}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1,Data:{Scores:[],NumScores:0}};Playtomic.PostData(postdata,Playtomic.APIUrl+"leaderboards/list.aspx?swfid="+Playtomic.SWFID+"&amp;js=true&amp;url="+(global?"global":Playtomic.SourceURL)+"&amp;table="+encodeUri(table)+"&amp;mode="+mode+"&amp;filters="+numcustomfilters+"&amp;page="+page+"&amp;perpage="+perpage,bridge,failvalue);}</p>
<p class="p1">Playtomic.Leaderboards.ListFB=function(table,callback,options)</p>
<p class="p1">{if(options==null)</p>
<p class="p1">options=new Object();var global=options.global||options.global==false?options.global:true;var highest=options.highest||options.highest==false?options.highest:true;var friendslist=options.friendslist?options.friendslist:new Array();var mode=options.mode?options.mode:"alltime";var customfilters=options.customfilters?options.customfilters:{};var page=options.page?options.page:1;var perpage=options.perpage?options.perpage:20;var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;Playtomic.Leaderboards.ListComplete(response,callback);}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1,Data:{Scores:[],NumScores:0}};var postdata="friendslist="+friendslist.join(",");var numcustomfilters=0;for(var x in customfilters)</p>
<p class="p1">{postdata+="&amp;ckey"+numcustomfilters+"="+x;postdata+="&amp;cdata"+numcustomfilters+"="+customfilters[x];numcustomfilters++;}</p>
<p class="p1">Playtomic.PostData(postdata,Playtomic.APIUrl+"leaderboards/listfb.aspx?swfid="+Playtomic.SWFID+"&amp;js=true&amp;url="+(global?"global":Playtomic.SourceURL)+"&amp;mode="+mode+"&amp;filters="+numcustomfilters+"&amp;table="+encodeUri(table)+"&amp;page="+page+"&amp;perpage="+perpage,bridge,failvalue);}</p>
<p class="p1">Playtomic.Leaderboards.ListComplete=function(response,callback)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;var scores=[];var arr=response.Data.Scores;for(var i=0;i&lt;arr.length;i++)</p>
<p class="p1">{var score={};score.Name=Playtomic.Unescape(arr[i].Name);score.FBUserId=arr[i].FBUserId;score.Points=arr[i].Points;score.Website=arr[i].Website;score.SDate=arr[i].SDate;score.RDate=arr[i].RDate;score.CustomData={};for(x in arr[i].CustomData)</p>
<p class="p1">score.CustomData[x]=Playtomic.Unescape(arr[i].CustomData[x]);scores[i]=score;}</p>
<p class="p1">callback(scores,response.Data.NumScores,{Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">Playtomic.Leaderboards.Save=function(score,table,callback,options)</p>
<p class="p1">{if(options==null)</p>
<p class="p1">options=new Object();var allowduplicates=options.allowduplicates||options.allowduplicates==false?options.allowduplicates:false;var highest=options.highest||options.highest==false?options.highest:true;var facebook=options.facebook||options.facebook==false?options.facebook:false;var postdata="table="+encodeUri(table)+"&amp;name="+encodeUri(score.Name)+"&amp;points="+encodeUri.Points+"&amp;allowduplicates="+(allowduplicates?"y":"n")+"&amp;highest="+(highest?"y":"n")+"&amp;fb="+(facebook?"y":"n")+"&amp;auth="+Playtomic.MD5(Playtomic.SourceURL+score.Points.toString());if(facebook)</p>
<p class="p1">{postdata+="&amp;fbuserid="+score.FBUserId;}</p>
<p class="p1">var c=0;if(score.CustomData)</p>
<p class="p1">{for(var key in score.CustomData)</p>
<p class="p1">{postdata+="&amp;ckey"+c+"="+key;postdata+="&amp;cdata"+c+"="+encodeUri(level.CustomData[key]);c++;}}</p>
<p class="p1">postdata+="&amp;customfields="+c;var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;callback({Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1,Data:{}};Playtomic.PostData(postdata,Playtomic.APIUrl+"leaderboards/save.aspx?swfid="+Playtomic.SWFID+"&amp;js=true&amp;url="+Playtomic.SourceURL,bridge,failvalue);}</p>
<p class="p1">Playtomic.Data={};Playtomic.Data.Views=function(callback,options)</p>
<p class="p1">{if(options==null)</p>
<p class="p1">options={};var day=options.day?options.day:0;var month=options.month?options.month:0;var year=options.year?options.year:0;Playtomic.Data.General("Views",callback,day,month,year);}</p>
<p class="p1">Playtomic.Data.Plays=function(callback,options)</p>
<p class="p1">{if(options==null)</p>
<p class="p1">options={};var day=options.day?options.day:0;var month=options.month?options.month:0;var year=options.year?options.year:0;Playtomic.Data.General("Plays",callback,day,month,year);}</p>
<p class="p1">Playtomic.Data.PlayTime=function(callback,options)</p>
<p class="p1">{if(options==null)</p>
<p class="p1">options={};var day=options.day?options.day:0;var month=options.month?options.month:0;var year=options.year?options.year:0;Playtomic.Data.General("PlayTime",callback,day,month,year);}</p>
<p class="p1">Playtomic.Data.General=function(type,callback,day,month,year)</p>
<p class="p1">{var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;var data={Name:type,Day:day,Month:month,Year:year,Value:response.Data.Value};callback(data,{Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCore:1,Data:{Value:0}};Playtomic.PostData("",Playtomic.APIUrl+"data/"+type+".aspx?swfid="+Playtomic.SWFID+"&amp;js=true&amp;day="+day+"&amp;month="+month+"&amp;year="+year,bridge,failvalue);}</p>
<p class="p1">Playtomic.Data.CustomMetric=function(metric,callback,options)</p>
<p class="p1">{if(options==null)</p>
<p class="p1">options={};var day=options.day?options.day:0;var month=options.month?options.month:0;var year=options.year?options.year:0;var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;var data={Name:"CustomMetric",Metric:metric,Day:day,Month:month,Year:year,Value:response.Data.Value};callback(data,{Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCore:1,Data:{Value:0}};Playtomic.PostData("",Playtomic.APIUrl+"data/custommetric.aspx?swfid="+Playtomic.SWFID+"&amp;metric="+escape(metric)+"&amp;js=true&amp;day="+day+"&amp;month="+month+"&amp;year="+year,bridge,failvalue);}</p>
<p class="p1">Playtomic.Data.LevelCounterMetric=function(metric,level,callback,options)</p>
<p class="p1">{if(options==null)</p>
<p class="p1">options={};var day=options.day?options.day:0;var month=options.month?options.month:0;var year=options.year?options.year:0;var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;var data={Name:"LevelCounterMetric",Metric:metric,Level:level,Day:day,Month:month,Year:year,Value:response.Data.Value};callback(data,{Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1,Data:{Value:0}};Playtomic.Data.LevelMetric("counter",metric,level,bridge,day,month,year,failvalue);}</p>
<p class="p1">Playtomic.Data.LevelRangedMetric=function(metric,level,callback,options)</p>
<p class="p1">{if(options==null)</p>
<p class="p1">options={};var day=options.day?options.day:0;var month=options.month?options.month:0;var year=options.year?options.year:0;var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;var data={Name:"LevelRangedMetric",Metric:metric,Level:level,Day:day,Month:month,Year:year,Data:response.Data.Values};callback(data,{Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1,Data:{Values:[]}};Playtomic.Data.LevelMetric("ranged",metric,level,bridge,day,month,year,failvalue);}</p>
<p class="p1">Playtomic.Data.LevelAverageMetric=function(metric,level,callback,options)</p>
<p class="p1">{if(options==null)</p>
<p class="p1">options={};var day=options.day?options.day:0;var month=options.month?options.month:0;var year=options.year?options.year:0;var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;var data={Name:"LevelAverageMetric",Metric:metric,Level:level,Day:day,Month:month,Year:year,Min:response.Data.Min,Max:response.Data.Max,Average:response.Data.Average};callback(data,{Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1,Data:{Min:0,Max:0,Average:0}};Playtomic.Data.LevelMetric("average",metric,level,bridge,day,month,year,failvalue);}</p>
<p class="p1">Playtomic.Data.LevelMetric=function(mode,metric,level,callback,day,month,year,failvalue)</p>
<p class="p1">{Playtomic.PostData("",Playtomic.APIUrl+"data/levelmetric"+mode+".aspx?swfid="+Playtomic.SWFID+"&amp;metric="+escape(metric)+"&amp;level="+escape(level)+"&amp;js=true&amp;day="+day+"&amp;month="+month+"&amp;year="+year,callback,failvalue);}</p>
<p class="p1">Playtomic.GeoIP={};Playtomic.GeoIP.Lookup=function(callback)</p>
<p class="p1">{var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;callback(response.Data,{Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1,Data:{Code:"N/A",Country:"UNKNOWN"}};Playtomic.PostData("",Playtomic.APIUrl+"geoip/lookup.aspx?swfid="+Playtomic.SWFID+"&amp;js=true",bridge,failvalue);}</p>
<p class="p1">Playtomic.GameVars={};Playtomic.GameVars.ERROR=0;Playtomic.GameVars.SUCCESS=1;Playtomic.GameVars.Load=function(callback)</p>
<p class="p1">{var bridge=function(response)</p>
<p class="p1">{if(callback==null)</p>
<p class="p1">return;var obj={};var vars=response.Data;for(var i=0;i&lt;vars.length;i++)</p>
<p class="p1">obj[vars[i].Name]=vars[i].Value;callback(obj,{Success:response.Status==1,ErrorCode:response.ErrorCode});}</p>
<p class="p1">var failvalue={Status:0,ErrorCode:1,Data:[]};Playtomic.PostData("",Playtomic.APIUrl+"gamevars/load.aspx?swfid="+Playtomic.SWFID+"&amp;js=true",bridge,failvalue);}</p>
<p class="p1">Playtomic.PostData=function(postdata,script,callback,failvalue)</p>
<p class="p1">{var request;if(window.XDomainRequest)</p>
<p class="p1">{request=new XDomainRequest();request.timeout=4000;request.onerror=function()</p>
<p class="p1">{callback(failvalue);}</p>
<p class="p1">request.onload=function()</p>
<p class="p1">{var data=request.responseText;callback(JSON.parse(data));}</p>
<p class="p1">if(postdata!="")</p>
<p class="p1">{request.open("POST",script);request.send(postdata);}</p>
<p class="p1">else</p>
<p class="p1">{request.open("GET",script);request.send();}}</p>
<p class="p1">else</p>
<p class="p1">{request=new XMLHttpRequest();request.onerror=function()</p>
<p class="p1">{callback(failvalue);}</p>
<p class="p1">request.onload=function()</p>
<p class="p1">{var data=request.responseText;callback(JSON.parse(data));}</p>
<p class="p1">if(postdata!="")</p>
<p class="p1">{request.open("POST",script,true);request.send(postdata);}</p>
<p class="p1">else</p>
<p class="p1">{request.open("GET",script,true);request.send();}}}</p>
<p class="p1">Playtomic.SetCookie=function(key,value)</p>
<p class="p1">{var expires=new Date();expires.setDate(expires.getDate()+30);document.cookie=key+"="+escape(value)+";expires="+expires.toUTCString();}</p>
<p class="p1">Playtomic.GetCookie=function(key)</p>
<p class="p1">{if(document.cookie.length&gt;0)</p>
<p class="p1">{var start=document.cookie.indexOf(key+"=");if(start!=-1)</p>
<p class="p1">{start=start+key.length+1;var end=document.cookie.indexOf(";",start);if(end==-1)</p>
<p class="p1">{end=document.cookie.length;}</p>
<p class="p1">return unescape(document.cookie.substring(start,end));}}</p>
<p class="p1">return 0;}</p>
<p class="p1">Playtomic.Clean=function(s)</p>
<p class="p1">{while(s.indexOf("/")&gt;-1)</p>
<p class="p1">s=s.replace("/","\\");while(s.indexOf("~")&gt;-1)</p>
<p class="p1">s=s.replace("~","-");return escape(s);}</p>
<p class="p1">Playtomic.Unescape=function(s)</p>
<p class="p1">{return decodeURI(s).replace(/\+/g," ");}</p>
<p class="p1">Playtomic.MD5=function(str)</p>
<p class="p1">{var bitOR=function(a,b)</p>
<p class="p1">{var lsb=(a&amp;0x1)|(b&amp;0x1);var msb31=(a&gt;&gt;&gt;1)|(b&gt;&gt;&gt;1);return(msb31&lt;&lt;1)|lsb;}</p>
<p class="p1">var bitXOR=function(a,b)</p>
<p class="p1">{var lsb=(a&amp;0x1)^(b&amp;0x1);var msb31=(a&gt;&gt;&gt;1)^(b&gt;&gt;&gt;1);return(msb31&lt;&lt;1)|lsb;}</p>
<p class="p1">var bitAND=function(a,b)</p>
<p class="p1">{var lsb=(a&amp;0x1)&amp;(b&amp;0x1);var msb31=(a&gt;&gt;&gt;1)&amp;(b&gt;&gt;&gt;1);return(msb31&lt;&lt;1)|lsb;}</p>
<p class="p1">var addme=function(x,y)</p>
<p class="p1">{var lsw=(x&amp;0xFFFF)+(y&amp;0xFFFF);var msw=(x&gt;&gt;16)+(y&gt;&gt;16)+(lsw&gt;&gt;16);return(msw&lt;&lt;16)|(lsw&amp;0xFFFF);}</p>
<p class="p1">var rhex=function(num)</p>
<p class="p1">{var str="";var j;for(j=0;j&lt;=3;j++)</p>
<p class="p1">str+=hex_chr.charAt((num&gt;&gt;(j*8+4))&amp;0x0F)+hex_chr.charAt((num&gt;&gt;(j*8))&amp;0x0F);return str;}</p>
<p class="p1">var str2blks_MD5=function(str)</p>
<p class="p1">{var nblk=((str.length+8)&gt;&gt;6)+1;var blks=new Array(nblk*16);var i;for(i=0;i&lt;nblk*16;i++)</p>
<p class="p1">blks[i]=0;for(i=0;i&lt;str.length;i++)</p>
<p class="p1">blks[i&gt;&gt;2]|=str.charCodeAt(i)&lt;&lt;(((str.length*8+i)%4)*8);blks[i&gt;&gt;2]|=0x80&lt;&lt;(((str.length*8+i)%4)*8);var l=str.length*8;blks[nblk*16-2]=(l&amp;0xFF);blks[nblk*16-2]|=((l&gt;&gt;&gt;8)&amp;0xFF)&lt;&lt;8;blks[nblk*16-2]|=((l&gt;&gt;&gt;16)&amp;0xFF)&lt;&lt;16;blks[nblk*16-2]|=((l&gt;&gt;&gt;24)&amp;0xFF)&lt;&lt;24;return blks;}</p>
<p class="p1">var rol=function(num,cnt)</p>
<p class="p1">{return(num&lt;&lt;cnt)|(num&gt;&gt;&gt;(32-cnt));}</p>
<p class="p1">var cmn=function(q,a,b,x,s,t)</p>
<p class="p1">{return addme(rol((addme(addme(a,q),addme(x,t))),s),b);}</p>
<p class="p1">var ff=function(a,b,c,d,x,s,t)</p>
<p class="p1">{return cmn(bitOR(bitAND(b,c),bitAND((~b),d)),a,b,x,s,t);}</p>
<p class="p1">var gg=function(a,b,c,d,x,s,t)</p>
<p class="p1">{return cmn(bitOR(bitAND(b,d),bitAND(c,(~d))),a,b,x,s,t);}</p>
<p class="p1">var hh=function(a,b,c,d,x,s,t)</p>
<p class="p1">{return cmn(bitXOR(bitXOR(b,c),d),a,b,x,s,t);}</p>
<p class="p1">var ii=function(a,b,c,d,x,s,t)</p>
<p class="p1">{return cmn(bitXOR(c,bitOR(b,(~d))),a,b,x,s,t);}</p>
<p class="p1">var x=str2blks_MD5(str);var a=1732584193;var b=-271733879;var c=-1732584194;var d=271733878;var i=0;var hex_chr="0123456789abcdef";for(i=0;i&lt;x.length;i+=16)</p>
<p class="p1">{var olda=a;var oldb=b;var oldc=c;var oldd=d;a=ff(a,b,c,d,x[i+0],7,-680876936);d=ff(d,a,b,c,x[i+1],12,-389564586);c=ff(c,d,a,b,x[i+2],17,606105819);b=ff(b,c,d,a,x[i+3],22,-1044525330);a=ff(a,b,c,d,x[i+4],7,-176418897);d=ff(d,a,b,c,x[i+5],12,1200080426);c=ff(c,d,a,b,x[i+6],17,-1473231341);b=ff(b,c,d,a,x[i+7],22,-45705983);a=ff(a,b,c,d,x[i+8],7,1770035416);d=ff(d,a,b,c,x[i+9],12,-1958414417);c=ff(c,d,a,b,x[i+10],17,-42063);b=ff(b,c,d,a,x[i+11],22,-1990404162);a=ff(a,b,c,d,x[i+12],7,1804603682);d=ff(d,a,b,c,x[i+13],12,-40341101);c=ff(c,d,a,b,x[i+14],17,-1502002290);b=ff(b,c,d,a,x[i+15],22,1236535329);a=gg(a,b,c,d,x[i+1],5,-165796510);d=gg(d,a,b,c,x[i+6],9,-1069501632);c=gg(c,d,a,b,x[i+11],14,643717713);b=gg(b,c,d,a,x[i+0],20,-373897302);a=gg(a,b,c,d,x[i+5],5,-701558691);d=gg(d,a,b,c,x[i+10],9,38016083);c=gg(c,d,a,b,x[i+15],14,-660478335);b=gg(b,c,d,a,x[i+4],20,-405537848);a=gg(a,b,c,d,x[i+9],5,568446438);d=gg(d,a,b,c,x[i+14],9,-1019803690);c=gg(c,d,a,b,x[i+3],14,-187363961);b=gg(b,c,d,a,x[i+8],20,1163531501);a=gg(a,b,c,d,x[i+13],5,-1444681467);d=gg(d,a,b,c,x[i+2],9,-51403784);c=gg(c,d,a,b,x[i+7],14,1735328473);b=gg(b,c,d,a,x[i+12],20,-1926607734);a=hh(a,b,c,d,x[i+5],4,-378558);d=hh(d,a,b,c,x[i+8],11,-2022574463);c=hh(c,d,a,b,x[i+11],16,1839030562);b=hh(b,c,d,a,x[i+14],23,-35309556);a=hh(a,b,c,d,x[i+1],4,-1530992060);d=hh(d,a,b,c,x[i+4],11,1272893353);c=hh(c,d,a,b,x[i+7],16,-155497632);b=hh(b,c,d,a,x[i+10],23,-1094730640);a=hh(a,b,c,d,x[i+13],4,681279174);d=hh(d,a,b,c,x[i+0],11,-358537222);c=hh(c,d,a,b,x[i+3],16,-722521979);b=hh(b,c,d,a,x[i+6],23,76029189);a=hh(a,b,c,d,x[i+9],4,-640364487);d=hh(d,a,b,c,x[i+12],11,-421815835);c=hh(c,d,a,b,x[i+15],16,530742520);b=hh(b,c,d,a,x[i+2],23,-995338651);a=ii(a,b,c,d,x[i+0],6,-198630844);d=ii(d,a,b,c,x[i+7],10,1126891415);c=ii(c,d,a,b,x[i+14],15,-1416354905);b=ii(b,c,d,a,x[i+5],21,-57434055);a=ii(a,b,c,d,x[i+12],6,1700485571);d=ii(d,a,b,c,x[i+3],10,-1894986606);c=ii(c,d,a,b,x[i+10],15,-1051523);b=ii(b,c,d,a,x[i+1],21,-2054922799);a=ii(a,b,c,d,x[i+8],6,1873313359);d=ii(d,a,b,c,x[i+15],10,-30611744);c=ii(c,d,a,b,x[i+6],15,-1560198380);b=ii(b,c,d,a,x[i+13],21,1309151649);a=ii(a,b,c,d,x[i+4],6,-145523070);d=ii(d,a,b,c,x[i+11],10,-1120210379);c=ii(c,d,a,b,x[i+2],15,718787259);b=ii(b,c,d,a,x[i+9],21,-343485551);a=addme(a,olda);b=addme(b,oldb);c=addme(c,oldc);d=addme(d,oldd);}</p>
<p class="p1">return rhex(a)+rhex(b)+rhex(c)+rhex(d);}</p>
<p class="p1">if(!this.JSON){this.JSON={};}</p>
<p class="p1">(function(){function f(n){return n&lt;10?'0'+n:n;}</p>
<p class="p1">if(typeof Date.prototype.toJSON!=='function'){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+'-'+</p>
<p class="p1">f(this.getUTCMonth()+1)+'-'+</p>
<p class="p1">f(this.getUTCDate())+'T'+</p>
<p class="p1">f(this.getUTCHours())+':'+</p>
<p class="p1">f(this.getUTCMinutes())+':'+</p>
<p class="p1">f(this.getUTCSeconds())+'Z':null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};}</p>
<p class="p1">var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={'\b':'\\b','\t':'\\t','\n':'\\n','\f':'\\f','\r':'\\r','"':'\\"','\\':'\\\\'},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?'"'+string.replace(escapable,function(a){var c=meta[a];return typeof c==='string'?c:'\\u'+('0000'+a.charCodeAt(0).toString(16)).slice(-4);})+'"':'"'+string+'"';}</p>
<p class="p1">function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value==='object'&amp;&amp;typeof value.toJSON==='function'){value=value.toJSON(key);}</p>
<p class="p1">if(typeof rep==='function'){value=rep.call(holder,key,value);}</p>
<p class="p1">switch(typeof value){case'string':return quote(value);case'number':return isFinite(value)?String(value):'null';case'boolean':case'null':return String(value);case'object':if(!value){return'null';}</p>
<p class="p1">gap+=indent;partial=[];if(Object.prototype.toString.apply(value)==='[object Array]'){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||'null';}</p>
<p class="p1">v=partial.length===0?'[]':gap?'[\n'+gap+</p>
<p class="p1">partial.join(',\n'+gap)+'\n'+</p>
<p class="p1">mind+']':'['+partial.join(',')+']';gap=mind;return v;}</p>
<p class="p1">if(rep&amp;&amp;typeof rep==='object'){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k==='string'){v=str(k,value);if(v){partial.push(quote(k)+(gap?': ':':')+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?': ':':')+v);}}}}</p>
<p class="p1">v=partial.length===0?'{}':gap?'{\n'+gap+partial.join(',\n'+gap)+'\n'+</p>
<p class="p1">mind+'}':'{'+partial.join(',')+'}';gap=mind;return v;}}</p>
<p class="p1">if(typeof JSON.stringify!=='function'){JSON.stringify=function(value,replacer,space){var i;gap='';indent='';if(typeof space==='number'){for(i=0;i&lt;space;i+=1){indent+=' ';}}else if(typeof space==='string'){indent=space;}</p>
<p class="p1">rep=replacer;if(replacer&amp;&amp;typeof replacer!=='function'&amp;&amp;(typeof replacer!=='object'||typeof replacer.length!=='number')){throw new Error('JSON.stringify');}</p>
<p class="p1">return str('',{'':value});};}</p>
<p class="p1">if(typeof JSON.parse!=='function'){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value==='object'){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}</p>
<p class="p1">return reviver.call(holder,key,value);}</p>
<p class="p1">text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return'\\u'+</p>
<p class="p1">('0000'+a.charCodeAt(0).toString(16)).slice(-4);});}</p>
<p class="p1">if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,'@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,']').replace(/(?:^|:|,)(?:\s*\[)+/g,''))){j=eval('('+text+')');return typeof reviver==='function'?walk({'':j},''):j;}</p>
<p class="p1">throw new SyntaxError('JSON.parse');};}}());</p>
</body>
</html>
